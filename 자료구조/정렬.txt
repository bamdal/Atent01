퀵정렬 
 1. 피봇을 정하고 나머지를 피봇보다 작은 값과 큰값으로 나누고 배열로 만들고 
 2. 나누어진 배열을 재귀적으로 퀵정렬을 실행
 3. 정렬된 배열들을 다시 결합

힙정렬 : 완전이진트리
 
출력 : k번째로 작은 값을 출력 
 비교횟수 최소화

일일히 하나씩 비교 할 경우
k=n 최대값 찾기 -> n-1번 비교
k=n 최소값 찾기 -> n-1번 비교

k=n 최대 최소값 -> 2n - 3 // 이미구한 최대 혹은 최소 빼고 한번더 해서 2n-2 -1
 효율적으로 찾을려면 두개씩 짝지어가면서 비교해가며 비교해서 최대,최소값을 하나 구하고 나머지값은 비교하고 탈락한 값에서 다시 비교하면 n-1 + (n/2 -1) 의 개수가 된다

해시테이블
 데이터를 저장하고 검색하는 자료구조
 키 - 값(Value)쌍으로 저장합니다

 해시함수로 키를 만들고 그 키가 가르치는 주소에 값을 저장

 고유한 ID : 주민번호 key - 해시 키 매핑
 이름, 학과, 나이, 성별- value

 다른 키가 동일한 해시 코드에 맵핑될 수 있다. - 충돌한다.

문자열 알고리즘 m 문자열길이 n 횟수
문자열을 n*m번 검색하는 알고리즘 - 단순 매칭 알고리즘

브루트 포스 알고리즘 - 일일히 하나씩 전부 비교, 문자열 검색에 쓰임
 긴 문자열에 경우 시간이 매우 걸림

KMP문자열 검색알고리즘
보이어 무어
라빈 카프 - 해시함수해시를 구해서 해시값을 비교
아호 코라식 - 여러개를 한꺼번에 검색할 수 있게 만든 트라이기반에 알고리즘




